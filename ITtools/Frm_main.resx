<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAAAAEAIABwAQAATAAAAA4OAAABACAALQEAALwBAAAKCgAAAQAgAAIBAADpAgAACAgAAAEA
        IADxAAAA6wMAAAAAAAAAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsQAAALEAGtI711AAABBUlEQVQ4T2NgKDh/jKHg3E+G
        wvO/gTRxGKL2J0P+ueNAA85+Ysg/HcdQcEmJNHwqlqHw3EcGIPGDIfukMAOpoPCYENDy7yADvjKUn+GH
        ChMPck/wAQ34AjEAZBqpIPOw4KgByAaAQpRUkHSEF2bAL4a84+JQYeJB7jlRoAE/gSnx3HeGgjO9DEXn
        IoFJE4ELz0YAaU8whrARciC1hee7geLAhFRwfhrQpJNAl5wD0sj4EkPJ5f8MJVf+Ay25hCIHUXsSaPEM
        qHuwgLSZrECN34CKvzPUr2KDihIJSs9KMeSd0gEHMNiQ07pAJ0tDZQkAUPQUnnsBdP4vIP0fjCHsl5jR
        zcAAAMM91d0QBmAqAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAA
        AXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAACxAAAAsQAa0jvXUAAADCSURBVDhP5VI7
        CgJBDE3nAfQSfm6h4mFk18mWHkO8jJ2tusluZeGC4KcRRdhOC8E3w4BbCOvUPngzjySPJBCiiQqxlmSy
        KxmtIWpYSudxgXjdo2jX+Ilm1UWjC4xyplCY9ERw4wmEkeOfGDM8gWA5WPedkrTlQ/UYb5uY8mYvp4A5
        x1Us8X/IunCsxmwNa4ajKWCUNsSAknzkaHUsfYzzQNHT6Wo+3gwp0o7v/wV2D9aA/VlnNN3joOXlaDXL
        3Gc9iN6vxJpY5lhqSQAAAABJRU5ErkJggolQTkcNChoKAAAADUlIRFIAAAAKAAAACggGAAAAjTLPvQAA
        AAFzUkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsQAAALEAGtI711AAAAl0lEQVQoU5VQ
        wQ3CMBDzCLw6Qfcj16izkAEYAEEfCCF4oIoHTWhpOkS3wAf5IFEVLNmXsy2dFMCEHvZx5PzOd9YD4veY
        g/iDyiat05CwpTSUGYiv/in+cNr4HeV2Sus0JJz1ey4oOsfpaKzINa+QfKunmbCD5X0BiTnDHLbOeOFK
        1rBt9vI0084HitahHEaUcYRpXHIJ4Al4Z1Up89+Q1gAAAABJRU5ErkJggolQTkcNChoKAAAADUlIRFIA
        AAAIAAAACAgGAAAAxA++iwAAAAFzUkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsQAAAL
        EAGtI711AAAAhklEQVQoU3WNTQrCQAyF35m6by8idN2ViQ7oNcS/pedQEPdlZgIzy57GJBRBSj8IzHsZ
        vgAsI/blAU7/410eAZIr1iA5qyHf5riE08U+3Oe4hLLaXbMC5ZMZPgil09CBSwOOjb+tY3nbnQ1CHbCT
        Htv4BMWXWnvvbPeDU4vjVHCYKoIaHOALKhU/Y973YdcAAAAASUVORK5CYII=
</value>
  </data>
</root>